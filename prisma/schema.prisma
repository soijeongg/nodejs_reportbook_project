// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users{
  UserId  Int @id @default(autoincrement()) @map("UserId")
  id      String @map("id") @unique
  password String @map("password")
  nickname String @map("nickname")

  books Books[]
  contents Contents[]
  @@map("Users")

}
enum bookStatus{
  READING
  DONE
}

model Books {
  bookId Int @id @default(autoincrement()) @map("bookId")
  title String @map("title")
  UserId Int @map("UserId")
  total_page Int @map("total_page")
  author String @map("author")
  image String @map("image")
  bookstatus bookStatus @default(READING)  @map("bookstatus")

  Users Users @relation(fields: [UserId], references: [UserId], onDelete:Cascade)
  contents Contents[]

  @@map("Books")
}

model Contents {
  contentId  Int @id @default(autoincrement()) @map("contentId")
  bookId     Int @map("bookId")
  UserId     Int @map("UserId")
  page       Int @map("page")
  comment     String @map("comment")
  
  books Books @relation(fields: [bookId], references:[bookId], onDelete: Cascade)
  users Users @relation (fields: [UserId], references: [UserId], onDelete: Cascade)

  @@map("Contents")

}